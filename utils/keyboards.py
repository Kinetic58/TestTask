from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder


def main_menu(webapp_url: str = None):
    kb = InlineKeyboardBuilder()
    kb.button(text="üéØ –ü—Ä–æ–π—Ç–∏ –∫–≤–µ—Å—Ç", callback_data="menu:quest")
    kb.button(text="ü§ñ –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –æ—Ç –ò–ò", callback_data="menu:ai")
    kb.button(text="üñºÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="ai:generate_image")
    kb.button(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="menu:about")
    kb.button(text="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="menu:smi")
    kb.button(text=" –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∫–æ—Ä–¥–æ–≤", web_app=WebAppInfo(url="https://testtask-azmg.onrender.com/miniapp"))

    kb.adjust(1)
    return kb.as_markup()


def main_menu_with_webapp(webapp_url: str = None):
    kb = InlineKeyboardBuilder()
    kb.button(text="üéØ –ü—Ä–æ–π—Ç–∏ –∫–≤–µ—Å—Ç", callback_data="menu:quest")
    kb.button(text="ü§ñ –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –æ—Ç –ò–ò", callback_data="menu:ai")
    kb.button(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="menu:about")
    kb.button(text="üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="menu:smi")

    if webapp_url:
        kb.button(
            text="üèÜ –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∫–æ—Ä–¥–æ–≤",
            web_app=WebAppInfo(url=f"{webapp_url}/miniapp")
        )
    else:
        kb.button(text="üèÜ –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∫–æ—Ä–¥–æ–≤", callback_data="menu:leaderboard")

    kb.adjust(1)
    return kb.as_markup()

def smi_menu() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üå§ –ü–æ–≥–æ–¥–∞", callback_data="weather:smi")
    kb.button(text="üí± –ö—É—Ä—Å—ã –í–∞–ª—é—Ç", callback_data="currency:smi")
    kb.button(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:main")
    kb.adjust(2)
    return kb.as_markup()

def weather_cities_menu(selected_city: str | None = None) -> InlineKeyboardMarkup:
    cities = ["moscow", "spb", "nsk"]
    city_names = {"moscow": "–ú–æ—Å–∫–≤–∞", "spb": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "nsk": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"}
    kb = InlineKeyboardBuilder()
    for city in cities:
        text = f"{city_names[city]}" + (" ‚úÖ" if city == selected_city else "")
        kb.button(text=text, callback_data=f"city:{city}")
    kb.button(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:main")
    kb.adjust(3)
    return kb.as_markup()


def currency_menu(selected_currency: str | None = None) -> InlineKeyboardMarkup:
    currencies = ["USD", "EUR", "USDT", "BTC"]
    kb = InlineKeyboardBuilder()
    for cur in currencies:
        text = cur + (" ‚úÖ" if cur == selected_currency else "")
        kb.button(text=text, callback_data=f"currency:{cur}")
    kb.button(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:main")
    kb.adjust(2)
    return kb.as_markup()


def quest_question_kb(options: list, qid: int):
    kb = InlineKeyboardBuilder()
    for idx, opt in enumerate(options):
        kb.button(text=opt, callback_data=f"quest:answer:{qid}:{idx}")
    kb.button(text="‚¨ÖÔ∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–≤–µ—Å—Ç", callback_data="quest:finish")
    kb.adjust(1)
    return kb.as_markup()

def ai_cancel_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="ai:cancel")
    return kb.as_markup()

def return_to_menu_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:main")
    return kb.as_markup()
