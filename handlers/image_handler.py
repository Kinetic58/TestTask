from aiogram import Router, types
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from utils.fsm import AIChat
from api_settings.image_API import generate_image

router = Router()

@router.callback_query(lambda c: c.data == "ai:generate_image")
async def generate_image_start(callback: CallbackQuery, state: FSMContext):
    await state.set_state(AIChat.generating_image)
    await callback.message.edit_text(
        "<b>üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –∏ –±–æ—Ç —Å–æ–∑–¥–∞—Å—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É.",
        parse_mode="HTML"
    )

@router.message(AIChat.generating_image)
async def handle_image_prompt(message: types.Message, state: FSMContext):
    prompt = message.text
    await message.chat.do("upload_photo")
    try:
        image_bytes = await generate_image(prompt)
        await message.answer_photo(photo=image_bytes, caption="–í–æ—Ç —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å!")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
    finally:
        await state.clear()
